<!DOCTYPE html>
<html lang="en">

<head>
  <meta charset="UTF-8">
  <meta name="viewport" content="width=device-width, initial-scale=1.0">
  <title>Admin Info</title>
  <style>
    /* 모달 스타일 */
    .modal {
      display: none;
      position: fixed;
      top: 50%;
      left: 50%;
      transform: translate(-50%, -50%);
      background-color: white;
      padding: 20px;
      box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1);
      z-index: 1000;
    }

    .modal-overlay {
      display: none;
      position: fixed;
      top: 0;
      left: 0;
      width: 100%;
      height: 100%;
      background: rgba(0, 0, 0, 0.5);
      z-index: 999;
    }

    .modal.show,
    .modal-overlay.show {
      display: block;
    }
  </style>
</head>

<body>
  <h2>Info Management</h2>
  <hr>
  <hr>
  <!-- Add Course 버튼 -->
  <button id="add-course-btn">ADD COURSE</button>

  <!-- 모달과 오버레이 -->
  <div class="modal-overlay" id="modal-overlay"></div>
  <div class="modal" id="add-course-modal">
    <h3>Add New Course</h3>
    <form id="add-course-form">
      <label for="course-name">Course Name:</label>
      <input type="text" id="course-name" name="course-name" required>
      <p></p>
      <label for="startDateTime">Start Date & Time:</label>
      <input type="datetime-local" id="startDateTime" name="startDateTime" required>
      <p></p>
      <label for="endDateTime">End Date & Time:</label>
      <input type="datetime-local" id="endDateTime" name="endDateTime" required>
      <p></p>
      <button type="submit" style="width: 100px;">Submit</button>
    </form>
  </div>


  <!-- Course List -->
  <div class="list">
    <h4>Course List</h4>
    <ul id="course-list">
      <% courses.forEach((course)=> { %>
        <li>
          <strong>
            <%= course.name %>
          </strong>
          (Start: <%= course.startDateTime %>, End: <%= course.endDateTime %>)
        </li>
        <% }); %>
    </ul>
  </div>
  <hr>
  <hr>
  <!-- Add Project -->
  <button id="add-project-btn">ADD PROJECT</button>
  <div class="modal-overlay" id="project-modal-overlay"></div>
  <div class="modal" id="add-project-modal">
    <h3>Add New Project</h3>
    <form action="/project/add" method="POST">
      <label for="project-name">Project Name:</label>
      <input type="text" id="project-name" name="name" required>
      <p></p>
      <label for="courseId">Course:</label>
      <select id="courseId" name="courseId" required>
        <% courses.forEach((course)=> { %>
          <option value="<%= course.courseId %>">
            <%= course.name %>
          </option>
          <% }); %>
      </select>
      <p></p>
      <label for="maxTeamPersonnel">Max Team Personnel:</label>
      <input type="number" id="maxTeamPersonnel" name="maxTeamPersonnel" required>
      <p></p>
      <label for="budgetType">Budget Type:</label>
      <input type="text" id="budgetType" name="budgetType" required>
      <p></p>
      <label for="budget">Budget:</label>
      <input type="number" id="budget" name="budget" required>
      <p></p>
      <label for="startDateTime">Start Date & Time:</label>
      <input type="datetime-local" id="startDateTime" name="startDateTime" required>
      <p></p>
      <label for="endDateTime">End Date & Time:</label>
      <input type="datetime-local" id="endDateTime" name="endDateTime" required>
      <p></p>
      <button type="submit">Submit</button>
    </form>
  </div>

  <!-- Project List -->
  <div class="list">
    <h4>Project List</h4>
    <ul id="project-list">
      <% projects.forEach((project)=> { %>
        <li class="project-item" data-project-id="<%= project.projectId %>">
          <strong>
            <%= project.projectName %>
          </strong>
          (Course: <%= project.courseName %>, Start: <%= project.startDateTime %>, End: <%= project.endDateTime %>)
        </li>
        <% }); %>
    </ul>
  </div>

  <hr>
  <hr>

  <!-- 팀 리스트 -->
  <div id="team-list-section">
    <button onclick="window.location.href='/admin/team/add'">Add New Team</button>
    <button onclick="window.location.href='/admin/teamMember/add'">Add Team Member</button>

    <h4>Teams in Selected Project</h4>
    <ul id="team-list">
    </ul>
  </div>

  <script>
    // 버튼 및 모달 요소 선택
    const addCourseBtn = document.getElementById('add-course-btn');
    const modalOverlay = document.getElementById('modal-overlay');
    const addCourseModal = document.getElementById('add-course-modal');
    const addCourseForm = document.getElementById('add-course-form');

    // 모달 열기
    addCourseBtn.addEventListener('click', () => {
      addCourseModal.classList.add('show');
      modalOverlay.classList.add('show');
    });

    // 모달 닫기 (오버레이 클릭 시)
    modalOverlay.addEventListener('click', () => {
      addCourseModal.classList.remove('show');
      modalOverlay.classList.remove('show');
    });

    // 모달 폼 제출
    addCourseForm.addEventListener('submit', async (event) => {
      event.preventDefault(); // 기본 폼 동작 방지

      const courseName = document.getElementById('course-name').value;
      const startDateTime = document.getElementById('startDateTime').value;
      const endDateTime = document.getElementById('endDateTime').value;

      try {
        // 서버로 데이터 전송
        const response = await fetch('/course/add', {
          method: 'POST',
          headers: {
            'Content-Type': 'application/json',
          },
          body: JSON.stringify({ 'course-name': courseName, startDateTime, endDateTime }),
        });

        if (response.ok) {
          // 성공 시 Course 리스트 갱신
          const li = document.createElement('li');
          li.innerHTML = `<strong>${courseName}</strong> (Start: ${startDateTime}, End: ${endDateTime})`;
          document.getElementById('course-list').appendChild(li);

          // 입력 필드 초기화 및 모달 닫기
          addCourseForm.reset();
          addCourseModal.classList.remove('show');
          modalOverlay.classList.remove('show');
        } else {
          alert('Failed to add course');
        }
      } catch (err) {
        console.error('Error adding course:', err);
      }
    });

    // Project 모달 열기
    document.getElementById('add-project-btn').addEventListener('click', () => {
      document.getElementById('add-project-modal').classList.add('show');
      document.getElementById('project-modal-overlay').classList.add('show');
    });

    // Project 모달 닫기
    document.getElementById('project-modal-overlay').addEventListener('click', () => {
      document.getElementById('add-project-modal').classList.remove('show');
      document.getElementById('project-modal-overlay').classList.remove('show');
    });

    // 특정 프로젝트의 팀 리스트 불러오기
    async function loadTeams(projectId) {
      try {
        const response = await fetch(`/admin/project/${projectId}/teams`);
        const teams = await response.json();

        const teamList = document.getElementById('team-list');
        teamList.innerHTML = ''; // 기존 리스트 초기화

        teams.forEach((team) => {
          const li = document.createElement('li');
          li.innerHTML = `<a href="/admin/team/manage/${team.teamId}">${team.name}</a> (Personnel: ${team.personnel}, Course: ${team.courseName})`;
          teamList.appendChild(li);
        });
      } catch (err) {
        console.error('Error loading teams:', err);
      }
    }

    // 프로젝트 클릭 시 팀 리스트 로드
    document.querySelectorAll('.project-item').forEach((projectItem) => {
      projectItem.addEventListener('click', () => {
        const projectId = projectItem.dataset.projectId;
        loadTeams(projectId);
      });
    });
  </script>
</body>

</html>